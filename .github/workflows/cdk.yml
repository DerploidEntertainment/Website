# This file should be edited in GitHub, for immediate access to the Marketplace and Documentation

name: CDK Synth and Deploy

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths: [cdk/**]

  # Allow running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  cdk:
    if: github.repository == 'DerploidEntertainment/Website'
    # Runs on Ubuntu 22.04 (Jammy Jellyfish), built on Debian 12 (Bookworm), see rough Debian/Ubuntu version mapping: https://askubuntu.com/questions/445487/what-debian-version-are-the-different-ubuntu-versions-based-on
    # Should match devcontainer OS version. See available GitHub hosted runners: https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#standard-github-hosted-runners-for-public-repositories
    runs-on: ubuntu-22.04
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'test' }}
    env:
      NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'prod' || 'test' }}
      CDK_WORKING_DIR: cdk

      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1

      DEPLOY_AWS_ACCOUNT: ${{ secrets.DEPLOY_AWS_ACCOUNT }}
      MAIN_HOSTED_ZONE_ID: ${{ secrets.MAIN_HOSTED_ZONE_ID }}
      REDIRECT_HOSTED_ZONE_IDS: ${{ secrets.REDIRECT_HOSTED_ZONE_IDS }}
      REDIRECT_TLS_CERTIFICATE_ARN: ${{ secrets.REDIRECT_TLS_CERTIFICATE_ARN }}
      DNSSEC_ALARM_SUBSCRIBE_EMAILS: ${{ secrets.DNSSEC_ALARM_SUBSCRIBE_EMAILS }}
      HEALTH_CHECK_ALARM_SUBSCRIBE_EMAILS: ${{ secrets.HEALTH_CHECK_ALARM_SUBSCRIBE_EMAILS }}
      DMARC_REPORT_RUA_EMAIL: ${{ secrets.DMARC_REPORT_RUA_EMAIL }}
      DMARC_REPORT_RUF_EMAIL: ${{ secrets.DMARC_REPORT_RUF_EMAIL }}
    steps:
      - name: checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22  # Should match Node version used in devcontainer
          cache: npm
          cache-dependency-path: ${{ env.CDK_WORKING_DIR }}/package-lock.json

      - name: CDK synth and deploy
        run: |
          cd ${{ env.CDK_WORKING_DIR }}
          npm ci
          awsProfile=derploid-site
          aws configure --profile $awsProfile set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
          aws configure --profile $awsProfile set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
          npm run synth:${{ env.NODE_ENV }}
          npm run deploy:${{ env.NODE_ENV }} -- --all --require-approval=never
