AWSTemplateFormatVersion: '2010-09-09'
Description: Resources for hosting the organization's website

Parameters:
  RootDomain:
    Type: String
    Default: example
    Description: The domain for which website redirect resources will be created. Do not include the TLD (e.g., use 'example' not 'example.com').
  TLD:
    Type: String
    Default: com
    Description: The Top Level Domain (TDL) under which RootDomain is registered
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: >
      The Route53 hosted zone for the domain at ${RootDomain}.${TLD}. All new DNS records will be added to that hosted zone.
      Using an existing zone simplifies DNS validation for TLS certificates during stack creation, and allows you to easily work with record sets not added by this template.
  GitHubPagesDefaultDomain:
    Type: String
    Default: example.github.io
    Description: >
      The GitHub Pages default domain to which the DNS CNAME record for your root domain will point.
      For more info, see https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain-and-the-www-subdomain-variant
  GitHubPagesDnsVerificationChallengeDomain:
    Type: String
    Default: _github-pages-challenge-ExampleOrganization
    Description: >
      Domain name of the DNS TXT record used by GitHub Pages for domain verification.
      Provided in GitHub user/organization Settings when adding a new verified domain.
      For more info, see https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages
  GitHubPagesDnsVerificationChallengeTxtValue:
    Type: String
    Default: 123abc
    Description: >
      Value to use in the root domain's DNS TXT record for GitHub Pages domain verification.
      Provided in GitHub user/organization Settings when adding a new verified domain. Do NOT include surrounding quotes.
      For more info, see https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages
  GitHubOrganizationDnsVerificationChallengeDomain:
    Type: String
    Default: _github-challenge-ExampleOrganization-organization.www
    Description: >
      Domain name of the DNS TXT record used by GitHub for organization domain verification.
      Provided in GitHub organization Settings when adding a new verified domain.
      For more info, see https://docs.github.com/en/enterprise-server@3.2/admin/configuration/configuring-your-enterprise/verifying-or-approving-a-domain-for-your-enterprise#verifying-a-domain-for-your-enterprise-account
  GitHubOrganizationDnsVerificationChallengeTxtValue:
    Type: String
    Default: 123abc
    Description: >
      Value to use in the root domain's DNS TXT record for GitHub organization domain verification.
      Provided in GitHub organization Settings when adding a new verified domain. Do NOT include surrounding quotes.
      For more info, see https://docs.github.com/en/enterprise-server@3.2/admin/configuration/configuring-your-enterprise/verifying-or-approving-a-domain-for-your-enterprise#verifying-a-domain-for-your-enterprise-account
  Region:
    Type: String
    Default: us-east-1
    Description: >
      This parameter is really just here to remind you that a stack can only be created from this template in the US East (N. Virginia) region.
      This is required for the DNSSEC key-signing key and ACM certificate that will be generated.
    AllowedPattern: ^us-east-1$
    ConstraintDescription: must equal 'us-east-1'.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Website hosting
      Parameters:
      - RootDomain
      - TLD
      - HostedZoneId
      - Region
    - Label:
        default: GitHub DNS config
      Parameters:
      - GitHubPagesDefaultDomain
      - GitHubPagesDnsVerificationChallengeDomain
      - GitHubPagesDnsVerificationChallengeTxtValue
      - GitHubOrganizationDnsVerificationChallengeDomain
      - GitHubOrganizationDnsVerificationChallengeTxtValue

Mappings:
  Global:
    Dns:
      LogRetentionDays: 30   # Valid values described at: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-retentionindays
    Hosting:
      BucketLogExpirationDays: 30

Resources:
  LogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      # BucketName: Let CloudFormation create a name for us, so deploys don't fail due to global name conflicts around the world. CloudFormation uses fairly readable defaults anyway
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
        - Id: expire-logs
          ExpirationInDays: !FindInMap [Global, Hosting, BucketLogExpirationDays]
          Status: Enabled
      Tags:
        - Key: Herp
          Value: Derp

  KskAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: Retain
    Properties:
      AliasName: !Sub alias/dnssec/${RootDomain}-${TLD}-ksk  # alias/ prefix is required (see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html#cfn-kms-alias-aliasname)
      TargetKeyId: !Ref KskMasterKey
  KskMasterKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    Properties:
      Description: !Sub Master key for DNSSEC signing for the ${RootDomain}.${TLD} and www.${RootDomain}.${TLD} domains
      Enabled: true
      EnableKeyRotation: false  # Key rotation not supported for asymmetric keys. See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation
      KeySpec: ECC_NIST_P256    # Asymmetric, 'ECC_NIST_P256' required for this key to be a DNSSEC key-signing key. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-configuring-dnssec-cmk-requirements.html
      KeyUsage: SIGN_VERIFY     # 'SIGN_VERIFY' required for ECC key material. See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-keyusage
      KeyPolicy:
        Version: "2012-10-17"
        Statement:  # Adapted from the default policy shown when enabling DNSSEC for a Hosted Zone in the Route 53 Console
        - Sid: Enable root user to manage key
          Effect: Allow
          Principal: { AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root" }
          Action: kms:*
          Resource: "*"
        - Sid: Allow Route 53 DNSSEC service to work with key
          Effect: Allow
          Principal: { Service: dnssec-route53.amazonaws.com }
          Action: [ kms:DescribeKey, kms:GetPublicKey, kms:Sign ]
          Resource: "*"
        - Sid: Allow Route 53 DNSSEC service to create grants for key, as long as they're given to other AWS resources
          Effect: Allow
          Principal: { Service: dnssec-route53.amazonaws.com }
          Action: kms:CreateGrant
          Resource: "*"
          Condition:
            Bool: { kms:GrantIsForAWSResource: true }
  KeySigningKey:
    Type: AWS::Route53::KeySigningKey
    DeletionPolicy: Retain
    Properties:
      HostedZoneId: !Ref HostedZoneId
      KeyManagementServiceArn: !GetAtt KskMasterKey.Arn
      Name: key_signing_key   # Cannot include hyphens. See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-name
      Status: ACTIVE
  Dnssec:
    Type: AWS::Route53::DNSSEC
    DependsOn: KeySigningKey
    DeletionPolicy: Retain
    Properties:
      HostedZoneId: !Ref HostedZoneId
  RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    DeletionPolicy: Retain
    Properties:
      Comment: Record sets to route traffic to the website CDN
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        # Allow GitHub to verify ownership of this domain
        - Name: !Sub ${GitHubPagesDnsVerificationChallengeDomain}.${RootDomain}.${TLD}
          TTL: 300  # Default is 300 (5 minutes)
          Type: TXT
          ResourceRecords: [!Sub '"${GitHubPagesDnsVerificationChallengeTxtValue}"']  # Quotes required for TXT, see https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#TXTFormat

        # Allow GitHub to verify ownership of WWW subdomain
        - Name: !Sub ${GitHubOrganizationDnsVerificationChallengeDomain}.${RootDomain}.${TLD}
          TTL: 300  # Default is 300 (5 minutes)
          Type: TXT
          ResourceRecords: [!Sub '"${GitHubOrganizationDnsVerificationChallengeTxtValue}"']  # Quotes required for TXT, see https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#TXTFormat

        # GitHub Pages apex domain IPv4 records (see https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain)
        - Name: !Sub ${RootDomain}.${TLD}
          TTL: 300  # Default is 300 (5 minutes)
          Type: A
          ResourceRecords:
          - 185.199.108.153
          - 185.199.109.153
          - 185.199.110.153
          - 185.199.111.153

        # GitHub Pages apex domain IPv6 records (see https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain)
        - Name: !Sub ${RootDomain}.${TLD}
          TTL: 300  # Default is 300 (5 minutes)
          Type: AAAA
          ResourceRecords:
          - 2606:50c0:8000::153
          - 2606:50c0:8001::153
          - 2606:50c0:8002::153
          - 2606:50c0:8003::153

        # GitHub Pages subdomain, so apex domain requests redirect to subdomain (see https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain)
        - Name: !Sub www.${RootDomain}.${TLD}
          TTL: 300  # Default is 300 (5 minutes)
          Type: CNAME
          ResourceRecords: [!Ref GitHubPagesDefaultDomain]

        # Certificate Authority Authorization, so that ONLY the following orgs can issue certs for ONLY the following domains
        # We don't need a CAA record for the www subdomain b/c it has a CNAME record, so it's not allowed to have any other records (see https://letsencrypt.org/docs/caa/#where-to-put-the-record).
        # 60s TTL recommended when associated with a health check (see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-1.html#cfn-route53-recordset-ttl)
        # Quotes around domains required
        - Name: !Sub ${RootDomain}.${TLD}
          Type: CAA
          TTL: 60
          ResourceRecords:
          - 0 issue "amazon.com"
          - 0 issue "amazontrust.com"
          - 0 issue "awstrust.com"
          - 0 issue "amazonaws.com"
          - 0 issue "letsencrypt.org"

Outputs:
  LogBucket:
    Description: Name of the S3 bucket storing CloudFront and S3 server access logs
    Value: !Ref LogBucket
    Export:
      Name: !Sub ${AWS::StackName}:LogBucketName
  SiteDomain:
    Description: Domain name of the website
    Value: !Sub www.${RootDomain}.${TLD}
    Export:
      Name: !Sub ${AWS::StackName}:SiteDomain
